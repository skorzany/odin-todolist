@font-face {
    font-family: 'Roboto';
    src: url('../fonts/Roboto-Italic.woff2') format('woff2'),
        url('../fonts/Roboto-Italic.woff') format('woff');
    font-weight: normal;
    font-style: italic;
    font-display: swap;
}

@font-face {
    font-family: 'Roboto';
    src: url('../fonts/Roboto-Regular.woff2') format('woff2'),
        url('../fonts/Roboto-Regular.woff') format('woff');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
}

:root {
    font-family: "Roboto", Arial, sans-serif;
    font-size: 16px;
    --side-color: rgba(252, 163, 17, 1);
    --main-color: rgba(20, 33, 61, 1);
    --card-color: rgba(229, 229, 229, 1);
    --scrollbar-width: .25rem;
    --side-min-width: 250px;
    --side-max-width: 350px;
    --card-min-width: 600px;
    --icon-profile-size: 3rem;
    --icon-card-size: 2rem;
    --icon-side-size: 1rem;
    --footer-font-size: .75rem;
    --task-side-font-size: .85rem;
    --task-side-marker-size: .75rem;
}

/* ===== PAGE LAYOUT ===== */
body,
main {
    display: flex;
}

body {
    width: 100vw;
    height: 100vh;
    overflow-y: hidden;
    caret-color: var(--side-color);
}

aside {
    background-color: var(--side-color);
    flex-shrink: 0;
}

main {
    flex: 1;
    background-color: var(--main-color);
    flex-direction: column;
    overflow-y: scroll;
}

footer {
    margin-top: auto;
    margin-bottom: .5rem;
    text-align: center;
    color: var(--card-color);
    font-size: var(--footer-font-size);
}

footer a {
    text-decoration: none;
}

footer a:visited {
    color: inherit;
}
/* ===== END OF PAGE LAYOUT ===== */

/* ===== CURSORS ===== */
.icon,
button,
.profile,
.project,
input[type="date"],
select,
fieldset label {
    cursor: pointer;
}

.task-card {
    cursor: default;
}

*[contenteditable] {
    cursor: text;
}
/* ===== END OF CURSORS ===== */

/* ===== ICONS ===== */
.icon {
    filter: invert(11%) sepia(11%) saturate(4734%) hue-rotate(189deg) brightness(92%) contrast(95%);
}

.icon-profile {
    width: var(--icon-profile-size);
}

.icon-side {
    width: var(--icon-side-size);
}

.icon-card {
    width: var(--icon-card-size);
}

aside .icon:not(.icon-profile):hover,
main .icon:hover {
    border-radius: 25%;
}

aside .icon:not(.icon-profile):hover {
    backdrop-filter: opacity(.15);
}

main .icon:hover {
    backdrop-filter: opacity(.5);
}
/* ===== END OF ICONS ===== */

/* ===== BUTTONS ===== */
button {
    margin-bottom: 1rem;
}
/* ===== END OF BUTTONS ===== */

/* ===== SIDEBAR ===== */
aside {
    padding: 1rem;
    padding-top: 0;
    width: clamp(var(--side-min-width), 15vw, var(--side-max-width));
    overflow-y: scroll;
}

.sidebar-top {
    border-bottom: 2px solid var(--main-color);
    text-align: center;
    position: sticky;
    top: 0;
    background-color: var(--side-color);
    z-index: 1;
}

.profile,
summary,
details:hover .side-icons {
    display: flex;
}

.profile,
summary {
    justify-content: space-between;
}

.profile {
    align-items: center;
    margin-bottom: 1rem;
    padding-top: 1rem;
}

.profile p {
    font-weight: bold;
}

.project {
    margin: 1rem 0;
    padding: .25rem;
}

.project-name {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    flex: 1;
}

.side-icons {
    display: none;
    gap: .5rem;
}

details:last-of-type {
    margin-bottom: 0;
}

.project:hover,
.in-focus {
    backdrop-filter: brightness(90%);
    border-radius: .25rem;
}

li {
    padding-left: 1rem;
    margin-top: .25rem;
    font-size: var(--task-side-font-size);
}

li:hover {
    text-decoration: underline dotted var(--main-color);
}

li::marker {
    font-size: var(--task-side-marker-size);
}

.task::marker {
    content: "◾";
}

.task-completed::marker {
    content: "✔️";
}

.task-new::marker {
    content: "➕";
}

.task-new {
    margin-top: .25rem;
    color: var(--main-color);
    text-align: bottom;
}

.special {
    font-weight: bold;
    text-decoration: underline;
}
/* ===== END OF SIDEBAR ===== */

/* ===== TASK CARD ===== */
.task-card,
.card-icons,
.card-controls,
.controls-top {
    display: flex;
}

.task-card,
.card-controls {
    flex-direction: column;
}

.task-card {
    background-color: var(--card-color);
    align-items: center;
    margin: 2rem 3rem;
    border-radius: 1.5rem;
    min-width: var(--card-min-width);
    text-align: center;
}

.card-icons {
    align-self: flex-end;
    justify-content: space-between;
    gap: .75rem;
    transform: translate(calc(-.5*var(--icon-card-size)), calc(.5*var(--icon-card-size)));
}

.task-title {
    position: relative;
    padding-bottom: .5rem;
    width: 60%;
    border-radius: 2rem;
    padding: .25rem 2rem;
}

.task-title[contenteditable]:empty::before {
    content: "Task title";
    color: gray;
}

.task-title:focus,
.task-desc:focus,
input[type="date"],
select {
    outline: 1px dashed var(--side-color);
}

fieldset,
.task-notes {
    border: 1px solid var(--side-color);
}

.task-title:before {
    content: "";
    position: absolute;
    margin: auto;
    right: 0;
    left: 0;
    bottom: 0;
    width: 60%;
    border-bottom: 2px solid var(--side-color);
}

.task-desc,
input[type="date"],
select {
    border-radius: 1rem;
}

.task-desc,
.card-controls,
.task-card p {
    width: 80%;
}

.task-desc {
    margin: .5rem;
    margin-top: .75rem;
    padding: .25rem 1rem;
}

.task-desc[contenteditable]:empty::before {
    content: "This is your task's description. Keep it short, without much detail.";
    color: gray;
}

.card-controls {
    margin: 1rem;
    gap: 1rem;
}

.controls-top {
    justify-content: space-around;
}

input[type="date"],
select,
.task-notes {
    padding: 1px 6px;
}

input[type="date"],
select {
    border: none;
}

select,
.task-notes {
    background-color: white;
}

fieldset {
    align-self: center;
    border-width: 2px;
}

fieldset ul,
.task-card p {
    text-align: left;
}

fieldset ul {
    margin: 0;
    padding: 0;
    list-style: none;
}

fieldset ul li:hover {
    text-decoration: none;
}

fieldset li+li {
    margin-top: .5rem;
}

.task-card p {
    margin-bottom: 2rem;
}

.task-notes {
    display: block;
    width: 100%;
    min-height: 2rem;
}

.task-notes:focus {
    outline: none;
}

.task-notes[contenteditable]:empty::before {
    content: "This is the place where you can add notes to your task. It can be as long as you want and formatted as you want, the only limitation is that it's gotta be text.";
    color: gray;
}
/* ===== END OF TASK CARD ===== */

/* ===== SCROLLBAR STYLE FOR CHROME ===== */
::-webkit-scrollbar {
    width: var(--scrollbar-width);
}

aside::-webkit-scrollbar-thumb {
    background-color: var(--card-color);
}

aside::-webkit-scrollbar-track {
    background-color: var(--side-color);
}

main::-webkit-scrollbar-thumb {
    background-color: var(--card-color);
}

main::-webkit-scrollbar-track {
    background-color: var(--main-color);
}
/* ===== END OF SCROLLBAR STYLE FOR CHROME ===== */